{
    "sourceFile": "frontend/src/pages/HomePage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 56,
            "patches": [
                {
                    "date": 1747223516952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747285882757,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,37 +22,8 @@\n         setLoading(false);\r\n       });\r\n   }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n \r\n-  // Add a new product\r\n-  const handleAddProduct = async (newProductData) => {\r\n-    try {\r\n-      const response = await fetch('http://localhost:5000/api/products', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(newProductData),\r\n-      });\r\n-      const result = await response.json();\r\n-      console.log('Product added:', result);\r\n-\r\n-      if (response.ok) {\r\n-        // If product added successfully, trigger a re-fetch\r\n-        setNewProductAdded(!newProductAdded);\r\n-      } else {\r\n-        console.log('Failed to add product:', result);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error adding product:', error);\r\n-    }\r\n-  };\r\n-\r\n-  // Show loading spinner or message until data is fetched\r\n-  if (loading) {\r\n-    return <div>Loading...</div>;\r\n-  }\r\n-\r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n         <h1> . </h1>\r\n"
                },
                {
                    "date": 1747285904712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,8 @@\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-  const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n   useEffect(() => {\r\n     // Fetch products when the component mounts or newProductAdded state changes\r\n     fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n"
                },
                {
                    "date": 1747285943282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,15 +12,13 @@\n     fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n       .then(response => response.json())\r\n       .then(data => {\r\n         setProducts(data.products || data); // Set fetched products\r\n-        setLoading(false); // Set loading to false after data is fetched\r\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n-        setLoading(false);\r\n       });\r\n-  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n+  }// Re-fetch products when newProductAdded changes\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n"
                },
                {
                    "date": 1747285961460,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n       });\r\n-  }// Re-fetch products when newProductAdded changes\r\n+  };\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n"
                },
                {
                    "date": 1747286081919,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,79 @@\n-// src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n+  // Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n-    // Fetch products when the component mounts or newProductAdded state changes\r\n-    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n+    fetch('http://localhost:5000/api/products')\r\n       .then(response => response.json())\r\n       .then(data => {\r\n-        setProducts(data.products || data); // Set fetched products\r\n+        setProducts(data.products || data);\r\n+        setLoading(false);\r\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n+        setLoading(false);\r\n       });\r\n+  }, [newProductAdded]);\r\n+\r\n+  // Add a new product\r\n+  const handleAddProduct = async (newProductData) => {\r\n+    try {\r\n+      const response = await fetch('http://localhost:5000/api/products', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(newProductData),\r\n+      });\r\n+\r\n+      const result = await response.json();\r\n+      console.log('Product added:', result);\r\n+\r\n+      if (response.ok) {\r\n+        setNewProductAdded(!newProductAdded);\r\n+      } else {\r\n+        console.log('Failed to add product:', result);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error adding product:', error);\r\n+    }\r\n   };\r\n \r\n+  // Show loading spinner or message until data is fetched\r\n+  if (loading) {\r\n+    return <div>Loading...</div>;\r\n+  }\r\n+\r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1> . </h1>\r\n+        <h1>Our Products</h1>\r\n       </div>\r\n \r\n+      {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n-                    <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"mobile\">Mobile</option>\r\n           <option value=\"clothing\">Clothing</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"books\">Books</option>\r\n           <option value=\"home\">Home</option>\r\n           <option value=\"toys\">Toys</option>\r\n           <option value=\"sports\">Sports</option>\r\n-          <option vallue=\"grocery\">Grocery</option>\r\n+          <option value=\"grocery\">Grocery</option>\r\n           <option value=\"furniture\">Furniture</option>\r\n           <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automative\">Automative</option>\r\n+          <option value=\"automotive\">Automotive</option>\r\n           <option value=\"health\">Health</option>\r\n           <option value=\"pet\">Pet</option>\r\n           <option value=\"stationery\">Stationery</option>\r\n           <option value=\"jewellery\">Jewellery</option>\r\n@@ -52,17 +82,35 @@\n           <option value=\"kitchen\">Kitchen</option>\r\n           <option value=\"garden\">Garden</option>\r\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n-        \r\n+\r\n         <h3>Price:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n         </select>\r\n       </div>\r\n \r\n+      {/* Add Product Button */}\r\n+      <div className=\"homePage__addProduct\">\r\n+        <button\r\n+          onClick={() =>\r\n+            handleAddProduct({\r\n+              name: \"Sample Product\",\r\n+              price: 999,\r\n+              category: \"electronics\",\r\n+              description: \"A brand new electronic item\",\r\n+              image: \"https://via.placeholder.com/150\"\r\n+            })\r\n+          }\r\n+        >\r\n+          Add Sample Product\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Product List */}\r\n       <div className=\"homePage__productList\">\r\n         {products.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n"
                },
                {
                    "date": 1747286494199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -104,9 +104,8 @@\n               image: \"https://via.placeholder.com/150\"\r\n             })\r\n           }\r\n         >\r\n-          Add Sample Product\r\n         </button>\r\n       </div>\r\n \r\n       {/* Product List */}\r\n"
                },
                {
                    "date": 1747287366387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1>Our Products</h1>\r\n+        <h1></h1>\r\n       </div>\r\n \r\n       {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n"
                },
                {
                    "date": 1747287380350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,8 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1></h1>\r\n       </div>\r\n \r\n       {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n"
                },
                {
                    "date": 1747301233975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,31 @@\n import React, { useEffect, useState } from 'react';\r\n+import CarouselSlider from '../components/CarouselSlider';\r\n import ProductCard from '../components/ProductCard.js';\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n+  const [category, setCategory] = useState('all');\r\n+  const [priceRange, setPriceRange] = useState('all');\r\n \r\n-  // Fetch products when the component mounts or newProductAdded state changes\r\n+  // ✅ Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n     fetch('http://localhost:5000/api/products')\r\n-      .then(response => response.json())\r\n-      .then(data => {\r\n+      .then((response) => response.json())\r\n+      .then((data) => {\r\n         setProducts(data.products || data);\r\n         setLoading(false);\r\n       })\r\n-      .catch(error => {\r\n+      .catch((error) => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n   }, [newProductAdded]);\r\n \r\n-  // Add a new product\r\n+  // ✅ Add a new product\r\n   const handleAddProduct = async (newProductData) => {\r\n     try {\r\n       const response = await fetch('http://localhost:5000/api/products', {\r\n         method: 'POST',\r\n@@ -44,22 +47,34 @@\n       console.error('Error adding product:', error);\r\n     }\r\n   };\r\n \r\n-  // Show loading spinner or message until data is fetched\r\n+  // ✅ Filter products based on category and price range\r\n+  const filteredProducts = products.filter((product) => {\r\n+    const isCategoryMatch =\r\n+      category === 'all' || product.category.toLowerCase() === category.toLowerCase();\r\n+    const isPriceMatch =\r\n+      priceRange === 'all' ||\r\n+      (priceRange === 'under1000' && product.price < 1000) ||\r\n+      (priceRange === 'under5000' && product.price < 5000);\r\n+\r\n+    return isCategoryMatch && isPriceMatch;\r\n+  });\r\n+\r\n+  // ✅ Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-      <div className=\"homePage__banner\">\r\n-      </div>\r\n+      {/* ✅ Carousel Slider */}\r\n+      <CarouselSlider />\r\n \r\n-      {/* Filters */}\r\n+      {/* ✅ Filters */}\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n-        <select>\r\n+        <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n@@ -83,34 +98,35 @@\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n \r\n         <h3>Price:</h3>\r\n-        <select>\r\n+        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n         </select>\r\n       </div>\r\n \r\n-      {/* Add Product Button */}\r\n+      {/* ✅ Add Product Button */}\r\n       <div className=\"homePage__addProduct\">\r\n         <button\r\n           onClick={() =>\r\n             handleAddProduct({\r\n-              name: \"Sample Product\",\r\n+              name: 'Sample Product',\r\n               price: 999,\r\n-              category: \"electronics\",\r\n-              description: \"A brand new electronic item\",\r\n-              image: \"https://via.placeholder.com/150\"\r\n+              category: 'electronics',\r\n+              description: 'A brand new electronic item',\r\n+              image: 'https://via.placeholder.com/150',\r\n             })\r\n           }\r\n         >\r\n+          Add Sample Product\r\n         </button>\r\n       </div>\r\n \r\n-      {/* Product List */}\r\n+      {/* ✅ Product List */}\r\n       <div className=\"homePage__productList\">\r\n-        {products.map((product) => (\r\n+        {filteredProducts.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747301977862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,135 +1,45 @@\n import React, { useEffect, useState } from 'react';\r\n import CarouselSlider from '../components/CarouselSlider';\r\n-import ProductCard from '../components/ProductCard.js';\r\n+import ProductListingPage from './ProductListingPage';\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [newProductAdded, setNewProductAdded] = useState(false);\r\n-  const [category, setCategory] = useState('all');\r\n-  const [priceRange, setPriceRange] = useState('all');\r\n \r\n-  // ✅ Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n     fetch('http://localhost:5000/api/products')\r\n-      .then((response) => response.json())\r\n-      .then((data) => {\r\n+      .then(response => response.json())\r\n+      .then(data => {\r\n         setProducts(data.products || data);\r\n         setLoading(false);\r\n       })\r\n-      .catch((error) => {\r\n+      .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n-  }, [newProductAdded]);\r\n+  }, []);\r\n \r\n-  // ✅ Add a new product\r\n-  const handleAddProduct = async (newProductData) => {\r\n-    try {\r\n-      const response = await fetch('http://localhost:5000/api/products', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(newProductData),\r\n-      });\r\n-\r\n-      const result = await response.json();\r\n-      console.log('Product added:', result);\r\n-\r\n-      if (response.ok) {\r\n-        setNewProductAdded(!newProductAdded);\r\n-      } else {\r\n-        console.log('Failed to add product:', result);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error adding product:', error);\r\n-    }\r\n-  };\r\n-\r\n-  // ✅ Filter products based on category and price range\r\n-  const filteredProducts = products.filter((product) => {\r\n-    const isCategoryMatch =\r\n-      category === 'all' || product.category.toLowerCase() === category.toLowerCase();\r\n-    const isPriceMatch =\r\n-      priceRange === 'all' ||\r\n-      (priceRange === 'under1000' && product.price < 1000) ||\r\n-      (priceRange === 'under5000' && product.price < 5000);\r\n-\r\n-    return isCategoryMatch && isPriceMatch;\r\n-  });\r\n-\r\n-  // ✅ Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n-  return (\r\n-    <div className=\"homePage\">\r\n-      {/* ✅ Carousel Slider */}\r\n-      <CarouselSlider />\r\n+  // 🟢 **Carousel Banner Items**\r\n+  const bannerItems = [\r\n+    \"https://via.placeholder.com/800x400?text=Banner+1\",\r\n+    \"https://via.placeholder.com/800x400?text=Banner+2\",\r\n+    \"https://via.placeholder.com/800x400?text=Banner+3\"\r\n+  ];\r\n \r\n-      {/* ✅ Filters */}\r\n-      <div className=\"homePage__filters\">\r\n-        <h3>Category:</h3>\r\n-        <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"fashion\">Fashion</option>\r\n-          <option value=\"books\">Books</option>\r\n-          <option value=\"mobile\">Mobile</option>\r\n-          <option value=\"clothing\">Clothing</option>\r\n-          <option value=\"home\">Home</option>\r\n-          <option value=\"toys\">Toys</option>\r\n-          <option value=\"sports\">Sports</option>\r\n-          <option value=\"grocery\">Grocery</option>\r\n-          <option value=\"furniture\">Furniture</option>\r\n-          <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automotive\">Automotive</option>\r\n-          <option value=\"health\">Health</option>\r\n-          <option value=\"pet\">Pet</option>\r\n-          <option value=\"stationery\">Stationery</option>\r\n-          <option value=\"jewellery\">Jewellery</option>\r\n-          <option value=\"footwear\">Footwear</option>\r\n-          <option value=\"accessories\">Accessories</option>\r\n-          <option value=\"kitchen\">Kitchen</option>\r\n-          <option value=\"garden\">Garden</option>\r\n-          <option value=\"outdoor\">Outdoor</option>\r\n-        </select>\r\n+  // Merge fetched product images into the banner if needed\r\n+  const productImages = products.map(product => product.image);\r\n+  const allCarouselItems = [...bannerItems, ...productImages];\r\n \r\n-        <h3>Price:</h3>\r\n-        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"under1000\">Under ₹1000</option>\r\n-          <option value=\"under5000\">Under ₹5000</option>\r\n-        </select>\r\n-      </div>\r\n-\r\n-      {/* ✅ Add Product Button */}\r\n-      <div className=\"homePage__addProduct\">\r\n-        <button\r\n-          onClick={() =>\r\n-            handleAddProduct({\r\n-              name: 'Sample Product',\r\n-              price: 999,\r\n-              category: 'electronics',\r\n-              description: 'A brand new electronic item',\r\n-              image: 'https://via.placeholder.com/150',\r\n-            })\r\n-          }\r\n-        >\r\n-          Add Sample Product\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* ✅ Product List */}\r\n-      <div className=\"homePage__productList\">\r\n-        {filteredProducts.map((product) => (\r\n-          <ProductCard key={product._id} product={product} />\r\n-        ))}\r\n-      </div>\r\n+  return (\r\n+    <div className=\"home-page\">\r\n+      <CarouselSlider items={allCarouselItems} />\r\n+      <ProductListingPage products={products} />\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747302390282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,19 @@\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n \r\n+  // Fetch products (adjust URL as needed)\r\n   useEffect(() => {\r\n     fetch('http://localhost:5000/api/products')\r\n-      .then(response => response.json())\r\n-      .then(data => {\r\n-        setProducts(data.products || data);\r\n+      .then((response) => response.json())\r\n+      .then((data) => {\r\n+        // Defensive: make sure data.products is an array\r\n+        const productsData = Array.isArray(data.products) ? data.products : data;\r\n+        setProducts(productsData);\r\n         setLoading(false);\r\n       })\r\n-      .catch(error => {\r\n+      .catch((error) => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n   }, []);\r\n@@ -23,22 +26,21 @@\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n-  // 🟢 **Carousel Banner Items**\r\n+  // Carousel Banner Items: these are static banners with valid image URLs and names\r\n   const bannerItems = [\r\n-    \"https://via.placeholder.com/800x400?text=Banner+1\",\r\n-    \"https://via.placeholder.com/800x400?text=Banner+2\",\r\n-    \"https://via.placeholder.com/800x400?text=Banner+3\"\r\n+    { image: 'https://via.placeholder.com/800x400?text=Banner+1', name: 'Banner 1' },\r\n+    { image: 'https://via.placeholder.com/800x400?text=Banner+2', name: 'Banner 2' },\r\n+    { image: 'https://via.placeholder.com/800x400?text=Banner+3', name: 'Banner 3' },\r\n   ];\r\n \r\n-  // Merge fetched product images into the banner if needed\r\n-  const productImages = products.map(product => product.image);\r\n-  const allCarouselItems = [...bannerItems, ...productImages];\r\n-\r\n   return (\r\n     <div className=\"home-page\">\r\n-      <CarouselSlider items={allCarouselItems} />\r\n+      {/* Carousel Slider with clean data */}\r\n+      <CarouselSlider items={bannerItems} />\r\n+\r\n+      {/* Product listing */}\r\n       <ProductListingPage products={products} />\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1747303592105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n import React, { useEffect, useState } from 'react';\r\n-import CarouselSlider from '../components/CarouselSlider';\r\n import ProductListingPage from './ProductListingPage';\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n"
                },
                {
                    "date": 1747303616363,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,8 @@\n \r\n   return (\r\n     <div className=\"home-page\">\r\n       {/* Carousel Slider with clean data */}\r\n-      <CarouselSlider items={bannerItems} />\r\n-\r\n       {/* Product listing */}\r\n       <ProductListingPage products={products} />\r\n     </div>\r\n   );\r\n"
                },
                {
                    "date": 1747303625741,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,14 +26,10 @@\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   // Carousel Banner Items: these are static banners with valid image URLs and names\r\n-  const bannerItems = [\r\n-    { image: 'https://via.placeholder.com/800x400?text=Banner+1', name: 'Banner 1' },\r\n-    { image: 'https://via.placeholder.com/800x400?text=Banner+2', name: 'Banner 2' },\r\n-    { image: 'https://via.placeholder.com/800x400?text=Banner+3', name: 'Banner 3' },\r\n-  ];\r\n \r\n+\r\n   return (\r\n     <div className=\"home-page\">\r\n       {/* Carousel Slider with clean data */}\r\n       {/* Product listing */}\r\n"
                },
                {
                    "date": 1747303830698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,106 @@\n+// src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n-import ProductListingPage from './ProductListingPage';\r\n+import ProductCard from '../components/ProductCard.js';\r\n+\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n-  // Fetch products (adjust URL as needed)\r\n   useEffect(() => {\r\n-    fetch('http://localhost:5000/api/products')\r\n-      .then((response) => response.json())\r\n-      .then((data) => {\r\n-        // Defensive: make sure data.products is an array\r\n-        const productsData = Array.isArray(data.products) ? data.products : data;\r\n-        setProducts(productsData);\r\n-        setLoading(false);\r\n+    // Fetch products when the component mounts or newProductAdded state changes\r\n+    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n+      .then(response => response.json())\r\n+      .then(data => {\r\n+        setProducts(data.products || data); // Set fetched products\r\n+        setLoading(false); // Set loading to false after data is fetched\r\n       })\r\n-      .catch((error) => {\r\n+      .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n-  }, []);\r\n+  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n \r\n+  // Add a new product\r\n+  const handleAddProduct = async (newProductData) => {\r\n+    try {\r\n+      const response = await fetch('http://localhost:5000/api/products', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(newProductData),\r\n+      });\r\n+      const result = await response.json();\r\n+      console.log('Product added:', result);\r\n+\r\n+      if (response.ok) {\r\n+        // If product added successfully, trigger a re-fetch\r\n+        setNewProductAdded(!newProductAdded);\r\n+      } else {\r\n+        console.log('Failed to add product:', result);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error adding product:', error);\r\n+    }\r\n+  };\r\n+\r\n+  // Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n-  // Carousel Banner Items: these are static banners with valid image URLs and names\r\n+  return (\r\n+    <div className=\"homePage\">\r\n+      <div className=\"homePage__banner\">\r\n+        <h1> . </h1>\r\n+      </div>\r\n \r\n+      <div className=\"homePage__filters\">\r\n+        <h3>Category:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"fashion\">Fashion</option>\r\n+          <option value=\"books\">Books</option>\r\n+                    <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"clothing\">Clothing</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"books\">Books</option>\r\n+          <option value=\"home\">Home</option>\r\n+          <option value=\"toys\">Toys</option>\r\n+          <option value=\"sports\">Sports</option>\r\n+          <option vallue=\"grocery\">Grocery</option>\r\n+          <option value=\"furniture\">Furniture</option>\r\n+          <option value=\"beauty\">Beauty</option>\r\n+          <option value=\"automative\">Automative</option>\r\n+          <option value=\"health\">Health</option>\r\n+          <option value=\"pet\">Pet</option>\r\n+          <option value=\"stationery\">Stationery</option>\r\n+          <option value=\"jewellery\">Jewellery</option>\r\n+          <option value=\"footwear\">Footwear</option>\r\n+          <option value=\"accessories\">Accessories</option>\r\n+          <option value=\"kitchen\">Kitchen</option>\r\n+          <option value=\"garden\">Garden</option>\r\n+          <option value=\"outdoor\">Outdoor</option>\r\n+        </select>\r\n+        \r\n+        <h3>Price:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"under1000\">Under ₹1000</option>\r\n+          <option value=\"under5000\">Under ₹5000</option>\r\n+        </select>\r\n+      </div>\r\n \r\n-  return (\r\n-    <div className=\"home-page\">\r\n-      {/* Carousel Slider with clean data */}\r\n-      {/* Product listing */}\r\n-      <ProductListingPage products={products} />\r\n+      <div className=\"homePage__productList\">\r\n+        {products.map((product) => (\r\n+          <ProductCard key={product._id} product={product} />\r\n+        ))}\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747303900546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,26 @@\n-// src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n+  // Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n-    // Fetch products when the component mounts or newProductAdded state changes\r\n-    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n+    fetch('http://localhost:5000/api/products')\r\n       .then(response => response.json())\r\n       .then(data => {\r\n-        setProducts(data.products || data); // Set fetched products\r\n-        setLoading(false); // Set loading to false after data is fetched\r\n+        setProducts(data.products || data);\r\n+        setLoading(false);\r\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n-  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n+  }, [newProductAdded]);\r\n \r\n   // Add a new product\r\n   const handleAddProduct = async (newProductData) => {\r\n     try {\r\n@@ -32,13 +30,13 @@\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify(newProductData),\r\n       });\r\n+\r\n       const result = await response.json();\r\n       console.log('Product added:', result);\r\n \r\n       if (response.ok) {\r\n-        // If product added successfully, trigger a re-fetch\r\n         setNewProductAdded(!newProductAdded);\r\n       } else {\r\n         console.log('Failed to add product:', result);\r\n       }\r\n@@ -54,29 +52,27 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1> . </h1>\r\n       </div>\r\n \r\n+      {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n-                    <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"mobile\">Mobile</option>\r\n           <option value=\"clothing\">Clothing</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"books\">Books</option>\r\n           <option value=\"home\">Home</option>\r\n           <option value=\"toys\">Toys</option>\r\n           <option value=\"sports\">Sports</option>\r\n-          <option vallue=\"grocery\">Grocery</option>\r\n+          <option value=\"grocery\">Grocery</option>\r\n           <option value=\"furniture\">Furniture</option>\r\n           <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automative\">Automative</option>\r\n+          <option value=\"automotive\">Automotive</option>\r\n           <option value=\"health\">Health</option>\r\n           <option value=\"pet\">Pet</option>\r\n           <option value=\"stationery\">Stationery</option>\r\n           <option value=\"jewellery\">Jewellery</option>\r\n@@ -85,17 +81,34 @@\n           <option value=\"kitchen\">Kitchen</option>\r\n           <option value=\"garden\">Garden</option>\r\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n-        \r\n+\r\n         <h3>Price:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n         </select>\r\n       </div>\r\n \r\n+      {/* Add Product Button */}\r\n+      <div className=\"homePage__addProduct\">\r\n+        <button\r\n+          onClick={() =>\r\n+            handleAddProduct({\r\n+              name: \"Sample Product\",\r\n+              price: 999,\r\n+              category: \"electronics\",\r\n+              description: \"A brand new electronic item\",\r\n+              image: \"https://via.placeholder.com/150\"\r\n+            })\r\n+          }\r\n+        >\r\n+        </button>\r\n+      </div>\r\n+\r\n+      {/* Product List */}\r\n       <div className=\"homePage__productList\">\r\n         {products.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n"
                },
                {
                    "date": 1747305025816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n+import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n+const socket = io('http://localhost:5000'); // Connect to WebSocket\r\n+\r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n"
                },
                {
                    "date": 1747305136047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,16 +2,15 @@\n import ProductCard from '../components/ProductCard.js';\r\n import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n-const socket = io('http://localhost:5000'); // Connect to WebSocket\r\n+const socket = io('http://localhost:5000');\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n-  // Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n     fetch('http://localhost:5000/api/products')\r\n       .then(response => response.json())\r\n       .then(data => {\r\n@@ -47,9 +46,16 @@\n       console.error('Error adding product:', error);\r\n     }\r\n   };\r\n \r\n-  // Show loading spinner or message until data is fetched\r\n+      // Listen for real-time updates\r\n+    socket.on('update-products', (newProduct) => {\r\n+      setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n+    });\r\n+\r\n+    return () => socket.off('update-products');\r\n+  }, []);\r\n+\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1747305420571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,29 +2,32 @@\n import ProductCard from '../components/ProductCard.js';\r\n import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n-const socket = io('http://localhost:5000');\r\n+const socket = io('http://localhost:5000'); // Connect to the WebSocket server\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n+  // 🌟 Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n-    fetch('http://localhost:5000/api/products')\r\n-      .then(response => response.json())\r\n-      .then(data => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const response = await fetch('http://localhost:5000/api/products');\r\n+        const data = await response.json();\r\n         setProducts(data.products || data);\r\n         setLoading(false);\r\n-      })\r\n-      .catch(error => {\r\n+      } catch (error) {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n-      });\r\n+      }\r\n+    };\r\n+    fetchProducts();\r\n   }, [newProductAdded]);\r\n \r\n-  // Add a new product\r\n+  // 🌟 Add a new product\r\n   const handleAddProduct = async (newProductData) => {\r\n     try {\r\n       const response = await fetch('http://localhost:5000/api/products', {\r\n         method: 'POST',\r\n@@ -37,32 +40,39 @@\n       const result = await response.json();\r\n       console.log('Product added:', result);\r\n \r\n       if (response.ok) {\r\n-        setNewProductAdded(!newProductAdded);\r\n+        setNewProductAdded(!newProductAdded); // Toggle state to refetch products\r\n       } else {\r\n         console.log('Failed to add product:', result);\r\n       }\r\n     } catch (error) {\r\n       console.error('Error adding product:', error);\r\n     }\r\n   };\r\n \r\n-      // Listen for real-time updates\r\n+  // 🌟 WebSocket listener for real-time updates\r\n+  useEffect(() => {\r\n     socket.on('update-products', (newProduct) => {\r\n+      console.log(\"New product received via socket:\", newProduct);\r\n       setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n     });\r\n \r\n-    return () => socket.off('update-products');\r\n+    // Cleanup when the component unmounts\r\n+    return () => {\r\n+      socket.off('update-products');\r\n+    };\r\n   }, []);\r\n \r\n+  // 🌟 Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n+        <h1>Our Products</h1>\r\n       </div>\r\n \r\n       {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n@@ -112,8 +122,9 @@\n               image: \"https://via.placeholder.com/150\"\r\n             })\r\n           }\r\n         >\r\n+          Add Sample Product\r\n         </button>\r\n       </div>\r\n \r\n       {/* Product List */}\r\n"
                },
                {
                    "date": 1747305780442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,11 +56,15 @@\n       console.log(\"New product received via socket:\", newProduct);\r\n       setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n     });\r\n \r\n-    // Cleanup when the component unmounts\r\n+    socket.on('delete-product', (productId) => {\r\n+    setProducts((prevProducts) => prevProducts.filter(p => p._id !== productId));\r\n+  });\r\n+\r\n     return () => {\r\n       socket.off('update-products');\r\n+      socket.off('delete-product');\r\n     };\r\n   }, []);\r\n \r\n   // 🌟 Show loading spinner or message until data is fetched\r\n"
                },
                {
                    "date": 1747307582089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,28 @@\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n-const socket = io('http://localhost:5000'); // Connect to the WebSocket server\r\n-\r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n-  // 🌟 Fetch products when the component mounts or newProductAdded state changes\r\n+  // Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const response = await fetch('http://localhost:5000/api/products');\r\n-        const data = await response.json();\r\n+    fetch('http://localhost:5000/api/products')\r\n+      .then(response => response.json())\r\n+      .then(data => {\r\n         setProducts(data.products || data);\r\n         setLoading(false);\r\n-      } catch (error) {\r\n+      })\r\n+      .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchProducts();\r\n+      });\r\n   }, [newProductAdded]);\r\n \r\n-  // 🌟 Add a new product\r\n+  // Add a new product\r\n   const handleAddProduct = async (newProductData) => {\r\n     try {\r\n       const response = await fetch('http://localhost:5000/api/products', {\r\n         method: 'POST',\r\n@@ -40,43 +35,25 @@\n       const result = await response.json();\r\n       console.log('Product added:', result);\r\n \r\n       if (response.ok) {\r\n-        setNewProductAdded(!newProductAdded); // Toggle state to refetch products\r\n+        setNewProductAdded(!newProductAdded);\r\n       } else {\r\n         console.log('Failed to add product:', result);\r\n       }\r\n     } catch (error) {\r\n       console.error('Error adding product:', error);\r\n     }\r\n   };\r\n \r\n-  // 🌟 WebSocket listener for real-time updates\r\n-  useEffect(() => {\r\n-    socket.on('update-products', (newProduct) => {\r\n-      console.log(\"New product received via socket:\", newProduct);\r\n-      setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n-    });\r\n-\r\n-    socket.on('delete-product', (productId) => {\r\n-    setProducts((prevProducts) => prevProducts.filter(p => p._id !== productId));\r\n-  });\r\n-\r\n-    return () => {\r\n-      socket.off('update-products');\r\n-      socket.off('delete-product');\r\n-    };\r\n-  }, []);\r\n-\r\n-  // 🌟 Show loading spinner or message until data is fetched\r\n+  // Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1>Our Products</h1>\r\n       </div>\r\n \r\n       {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n@@ -126,9 +103,8 @@\n               image: \"https://via.placeholder.com/150\"\r\n             })\r\n           }\r\n         >\r\n-          Add Sample Product\r\n         </button>\r\n       </div>\r\n \r\n       {/* Product List */}\r\n"
                },
                {
                    "date": 1747307741151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,28 @@\n+// src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n+\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n   const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n-  // Fetch products when the component mounts or newProductAdded state changes\r\n   useEffect(() => {\r\n-    fetch('http://localhost:5000/api/products')\r\n+    // Fetch products when the component mounts or newProductAdded state changes\r\n+    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n       .then(response => response.json())\r\n       .then(data => {\r\n-        setProducts(data.products || data);\r\n-        setLoading(false);\r\n+        setProducts(data.products || data); // Set fetched products\r\n+        setLoading(false); // Set loading to false after data is fetched\r\n       })\r\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n-  }, [newProductAdded]);\r\n+  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n \r\n   // Add a new product\r\n   const handleAddProduct = async (newProductData) => {\r\n     try {\r\n@@ -30,13 +32,13 @@\n           'Content-Type': 'application/json',\r\n         },\r\n         body: JSON.stringify(newProductData),\r\n       });\r\n-\r\n       const result = await response.json();\r\n       console.log('Product added:', result);\r\n \r\n       if (response.ok) {\r\n+        // If product added successfully, trigger a re-fetch\r\n         setNewProductAdded(!newProductAdded);\r\n       } else {\r\n         console.log('Failed to add product:', result);\r\n       }\r\n@@ -52,27 +54,29 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n+        <h1> . </h1>\r\n       </div>\r\n \r\n-      {/* Filters */}\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n-          <option value=\"mobile\">Mobile</option>\r\n+                    <option value=\"mobile\">Mobile</option>\r\n           <option value=\"clothing\">Clothing</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"books\">Books</option>\r\n           <option value=\"home\">Home</option>\r\n           <option value=\"toys\">Toys</option>\r\n           <option value=\"sports\">Sports</option>\r\n-          <option value=\"grocery\">Grocery</option>\r\n+          <option vallue=\"grocery\">Grocery</option>\r\n           <option value=\"furniture\">Furniture</option>\r\n           <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automotive\">Automotive</option>\r\n+          <option value=\"automative\">Automative</option>\r\n           <option value=\"health\">Health</option>\r\n           <option value=\"pet\">Pet</option>\r\n           <option value=\"stationery\">Stationery</option>\r\n           <option value=\"jewellery\">Jewellery</option>\r\n@@ -81,34 +85,17 @@\n           <option value=\"kitchen\">Kitchen</option>\r\n           <option value=\"garden\">Garden</option>\r\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n-\r\n+        \r\n         <h3>Price:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n         </select>\r\n       </div>\r\n \r\n-      {/* Add Product Button */}\r\n-      <div className=\"homePage__addProduct\">\r\n-        <button\r\n-          onClick={() =>\r\n-            handleAddProduct({\r\n-              name: \"Sample Product\",\r\n-              price: 999,\r\n-              category: \"electronics\",\r\n-              description: \"A brand new electronic item\",\r\n-              image: \"https://via.placeholder.com/150\"\r\n-            })\r\n-          }\r\n-        >\r\n-        </button>\r\n-      </div>\r\n-\r\n-      {/* Product List */}\r\n       <div className=\"homePage__productList\">\r\n         {products.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n"
                },
                {
                    "date": 1747308026138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,8 +45,19 @@\n     } catch (error) {\r\n       console.error('Error adding product:', error);\r\n     }\r\n   };\r\n+  const fetchProducts = async () => {\r\n+    try {\r\n+      const response = await fetch('http://localhost:5000/api/products');\r\n+      const data = await response.json();\r\n+      // Only fetch products that are not deleted\r\n+      setProducts(data.products.filter(product => !product.isDeleted));\r\n+    } catch (error) {\r\n+      console.error('Error fetching products:', error);\r\n+    }\r\n+  };\r\n+  fetchProducts();\r\n \r\n   // Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n"
                },
                {
                    "date": 1747308818540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,117 +1,81 @@\n-// src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-\r\n+import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n+const socket = io('http://localhost:5000');\r\n+\r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n+  const [deletedProducts, setDeletedProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n   useEffect(() => {\r\n-    // Fetch products when the component mounts or newProductAdded state changes\r\n-    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n-      .then(response => response.json())\r\n-      .then(data => {\r\n-        setProducts(data.products || data); // Set fetched products\r\n-        setLoading(false); // Set loading to false after data is fetched\r\n-      })\r\n-      .catch(error => {\r\n+    const fetchProducts = async () => {\r\n+      try {\r\n+        const response = await fetch('http://localhost:5000/api/products');\r\n+        const data = await response.json();\r\n+        setProducts(data.products || data);\r\n+        setLoading(false);\r\n+      } catch (error) {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n-      });\r\n-  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n+      }\r\n+    };\r\n+    fetchProducts();\r\n+  }, []);\r\n \r\n-  // Add a new product\r\n-  const handleAddProduct = async (newProductData) => {\r\n-    try {\r\n-      const response = await fetch('http://localhost:5000/api/products', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(newProductData),\r\n-      });\r\n-      const result = await response.json();\r\n-      console.log('Product added:', result);\r\n+  // 🌟 Handle delete\r\n+  const handleDeleteProduct = (product) => {\r\n+    setProducts((prevProducts) => \r\n+      prevProducts.filter((p) => p._id !== product._id)\r\n+    );\r\n+    setDeletedProducts((prev) => [...prev, product]);\r\n+  };\r\n \r\n-      if (response.ok) {\r\n-        // If product added successfully, trigger a re-fetch\r\n-        setNewProductAdded(!newProductAdded);\r\n-      } else {\r\n-        console.log('Failed to add product:', result);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error adding product:', error);\r\n-    }\r\n+  // 🌟 Handle restore\r\n+  const handleRestoreProduct = (product) => {\r\n+    setDeletedProducts((prev) => prev.filter((p) => p._id !== product._id));\r\n+    const updatedProducts = [...products];\r\n+    const index = product.originalIndex;\r\n+    updatedProducts.splice(index, 0, product); // Restore to original position\r\n+    setProducts(updatedProducts);\r\n   };\r\n-  const fetchProducts = async () => {\r\n-    try {\r\n-      const response = await fetch('http://localhost:5000/api/products');\r\n-      const data = await response.json();\r\n-      // Only fetch products that are not deleted\r\n-      setProducts(data.products.filter(product => !product.isDeleted));\r\n-    } catch (error) {\r\n-      console.error('Error fetching products:', error);\r\n-    }\r\n-  };\r\n-  fetchProducts();\r\n \r\n-  // Show loading spinner or message until data is fetched\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1> . </h1>\r\n+        <h1>Our Products</h1>\r\n       </div>\r\n \r\n-      <div className=\"homePage__filters\">\r\n-        <h3>Category:</h3>\r\n-        <select>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"fashion\">Fashion</option>\r\n-          <option value=\"books\">Books</option>\r\n-                    <option value=\"mobile\">Mobile</option>\r\n-          <option value=\"clothing\">Clothing</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"books\">Books</option>\r\n-          <option value=\"home\">Home</option>\r\n-          <option value=\"toys\">Toys</option>\r\n-          <option value=\"sports\">Sports</option>\r\n-          <option vallue=\"grocery\">Grocery</option>\r\n-          <option value=\"furniture\">Furniture</option>\r\n-          <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automative\">Automative</option>\r\n-          <option value=\"health\">Health</option>\r\n-          <option value=\"pet\">Pet</option>\r\n-          <option value=\"stationery\">Stationery</option>\r\n-          <option value=\"jewellery\">Jewellery</option>\r\n-          <option value=\"footwear\">Footwear</option>\r\n-          <option value=\"accessories\">Accessories</option>\r\n-          <option value=\"kitchen\">Kitchen</option>\r\n-          <option value=\"garden\">Garden</option>\r\n-          <option value=\"outdoor\">Outdoor</option>\r\n-        </select>\r\n-        \r\n-        <h3>Price:</h3>\r\n-        <select>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"under1000\">Under ₹1000</option>\r\n-          <option value=\"under5000\">Under ₹5000</option>\r\n-        </select>\r\n-      </div>\r\n-\r\n       <div className=\"homePage__productList\">\r\n-        {products.map((product) => (\r\n-          <ProductCard key={product._id} product={product} />\r\n+        {products.map((product, index) => (\r\n+          <ProductCard\r\n+            key={product._id}\r\n+            product={{ ...product, originalIndex: index }}\r\n+            onDelete={handleDeleteProduct}\r\n+          />\r\n         ))}\r\n       </div>\r\n+\r\n+      {deletedProducts.length > 0 && (\r\n+        <div className=\"restore-section\">\r\n+          <h3>Restore Deleted Products</h3>\r\n+          {deletedProducts.map((product) => (\r\n+            <div key={product._id} className=\"restore-item\">\r\n+              <span>{product.name}</span>\r\n+              <button onClick={() => handleRestoreProduct(product)}>\r\n+                Restore\r\n+              </button>\r\n+            </div>\r\n+          ))}\r\n+        </div>\r\n+      )}\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747309678165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1>Our Products</h1>\r\n+        <h1></h1>\r\n       </div>\r\n \r\n       <div className=\"homePage__productList\">\r\n         {products.map((product, index) => (\r\n"
                },
                {
                    "date": 1747309699586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,6 @@\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-import io from 'socket.io-client';\r\n import './HomePage.css';\r\n \r\n const socket = io('http://localhost:5000');\r\n \r\n"
                },
                {
                    "date": 1747309718023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import './HomePage.css';\r\n \r\n-const socket = io('http://localhost:5000');\r\n-\r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [deletedProducts, setDeletedProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n"
                },
                {
                    "date": 1747309736910,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"homePage__banner\">\r\n-        <h1></h1>\r\n       </div>\r\n \r\n       <div className=\"homePage__productList\">\r\n         {products.map((product, index) => (\r\n"
                },
                {
                    "date": 1747635699192,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,112 @@\n+// src/pages/HomePage.js\r\n+import React, { useEffect, useState } from 'react';\r\n+import ProductCard from '../components/ProductCard.js';\r\n+import HeroBannerCarousel from \"../components/HeroBannerCarousel\";\r\n+\r\n+import './HomePage.css';\r\n+\r\n+const HomePage = () => {\r\n+  const [products, setProducts] = useState([]);\r\n+  const [loading, setLoading] = useState(true);\r\n+  const [newProductAdded, setNewProductAdded] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+  \r\n+    fetch('http://localhost:5000/api/products')\r\n+      .then(response => response.json())\r\n+      .then(data => {\r\n+        setProducts(data.products || data);\r\n+        setLoading(false);\r\n+      })\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n+        setLoading(false);\r\n+      });\r\n+  }, [newProductAdded]); \r\n+\r\n+  // Add a new product\r\n+  const handleAddProduct = async (newProductData) => {\r\n+    try {\r\n+      const response = await fetch('http://localhost:5000/api/products', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(newProductData),\r\n+      });\r\n+      const result = await response.json();\r\n+      console.log('Product added:', result);\r\n+\r\n+      if (response.ok) {\r\n+        \r\n+        setNewProductAdded(!newProductAdded);\r\n+      } else {\r\n+        console.log('Failed to add product:', result);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error adding product:', error);\r\n+    }\r\n+  };\r\n+\r\n+  \r\n+  if (loading) {\r\n+    return <div>Loading...</div>;\r\n+  }\r\n+\r\n+  return (\r\n+    <div className=\"homePage\">\r\n+      <div className=\"container mx-auto mt-5\">\r\n+    <HeroBannerCarousel />\r\n+      </div>\r\n+\r\n+      <div className=\"homePage__banner\">\r\n+        <h1></h1>\r\n+      </div>\r\n+\r\n+      <div className=\"homePage__filters\">\r\n+        <h3>Category:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"fashion\">Fashion</option>\r\n+          <option value=\"books\">Books</option>\r\n+                    <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"clothing\">Clothing</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"books\">Books</option>\r\n+          <option value=\"home\">Home</option>\r\n+          <option value=\"toys\">Toys</option>\r\n+          <option value=\"sports\">Sports</option>\r\n+          <option vallue=\"grocery\">Grocery</option>\r\n+          <option value=\"furniture\">Furniture</option>\r\n+          <option value=\"beauty\">Beauty</option>\r\n+          <option value=\"automative\">Automative</option>\r\n+          <option value=\"health\">Health</option>\r\n+          <option value=\"pet\">Pet</option>\r\n+          <option value=\"stationery\">Stationery</option>\r\n+          <option value=\"jewellery\">Jewellery</option>\r\n+          <option value=\"footwear\">Footwear</option>\r\n+          <option value=\"accessories\">Accessories</option>\r\n+          <option value=\"kitchen\">Kitchen</option>\r\n+          <option value=\"garden\">Garden</option>\r\n+          <option value=\"outdoor\">Outdoor</option>\r\n+        </select>\r\n+        \r\n+        <h3>Price:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"under1000\">Under ₹1000</option>\r\n+          <option value=\"under5000\">Under ₹5000</option>\r\n+        </select>\r\n+      </div>\r\n+\r\n+      <div className=\"homePage__productList\">\r\n+        {products.map((product) => (\r\n+          <ProductCard key={product._id} product={product} />\r\n+        ))}\r\n+      </div>\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default HomePage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747635732325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"container mx-auto mt-5\">\r\n-    <HeroBannerCarousel />\r\n+        <HeroBannerCarousel />\r\n       </div>\r\n \r\n       <div className=\"homePage__banner\">\r\n         <h1></h1>\r\n@@ -108,83 +108,5 @@\n     </div>\r\n   );\r\n };\r\n \r\n-export default HomePage;\n-import React, { useEffect, useState } from 'react';\r\n-import ProductCard from '../components/ProductCard.js';\r\n-import './HomePage.css';\r\n-\r\n-const HomePage = () => {\r\n-  const [products, setProducts] = useState([]);\r\n-  const [deletedProducts, setDeletedProducts] = useState([]);\r\n-  const [loading, setLoading] = useState(true);\r\n-\r\n-  useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      try {\r\n-        const response = await fetch('http://localhost:5000/api/products');\r\n-        const data = await response.json();\r\n-        setProducts(data.products || data);\r\n-        setLoading(false);\r\n-      } catch (error) {\r\n-        console.error('Error fetching products:', error);\r\n-        setLoading(false);\r\n-      }\r\n-    };\r\n-    fetchProducts();\r\n-  }, []);\r\n-\r\n-  // 🌟 Handle delete\r\n-  const handleDeleteProduct = (product) => {\r\n-    setProducts((prevProducts) => \r\n-      prevProducts.filter((p) => p._id !== product._id)\r\n-    );\r\n-    setDeletedProducts((prev) => [...prev, product]);\r\n-  };\r\n-\r\n-  // 🌟 Handle restore\r\n-  const handleRestoreProduct = (product) => {\r\n-    setDeletedProducts((prev) => prev.filter((p) => p._id !== product._id));\r\n-    const updatedProducts = [...products];\r\n-    const index = product.originalIndex;\r\n-    updatedProducts.splice(index, 0, product); // Restore to original position\r\n-    setProducts(updatedProducts);\r\n-  };\r\n-\r\n-  if (loading) {\r\n-    return <div>Loading...</div>;\r\n-  }\r\n-\r\n-  return (\r\n-    <div className=\"homePage\">\r\n-      <div className=\"homePage__banner\">\r\n-      </div>\r\n-\r\n-      <div className=\"homePage__productList\">\r\n-        {products.map((product, index) => (\r\n-          <ProductCard\r\n-            key={product._id}\r\n-            product={{ ...product, originalIndex: index }}\r\n-            onDelete={handleDeleteProduct}\r\n-          />\r\n-        ))}\r\n-      </div>\r\n-\r\n-      {deletedProducts.length > 0 && (\r\n-        <div className=\"restore-section\">\r\n-          <h3>Restore Deleted Products</h3>\r\n-          {deletedProducts.map((product) => (\r\n-            <div key={product._id} className=\"restore-item\">\r\n-              <span>{product.name}</span>\r\n-              <button onClick={() => handleRestoreProduct(product)}>\r\n-                Restore\r\n-              </button>\r\n-            </div>\r\n-          ))}\r\n-        </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n export default HomePage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747636367124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-import HeroBannerCarousel from \"../components/HeroBannerCarousel\";\r\n+import HeroBannerCarousel from \"../components/HomeBannerCarousel.js\";\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n@@ -54,10 +54,10 @@\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n+      <HomeBannerCarousel />\r\n       <div className=\"container mx-auto mt-5\">\r\n-        <HeroBannerCarousel />\r\n       </div>\r\n \r\n       <div className=\"homePage__banner\">\r\n         <h1></h1>\r\n"
                },
                {
                    "date": 1747636458997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n-import HeroBannerCarousel from \"../components/HomeBannerCarousel.js\";\r\n+import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n"
                },
                {
                    "date": 1747636779248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,11 @@\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-      <HomeBannerCarousel />\r\n-      <div className=\"container mx-auto mt-5\">\r\n+      <div className=\"homePage__bannerCarousel\">\r\n+        <HomeBannerCarousel />\r\n       </div>\r\n-\r\n       <div className=\"homePage__banner\">\r\n         <h1></h1>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1747638611955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,11 +54,12 @@\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-      <div className=\"homePage__bannerCarousel\">\r\n+      <div className=\"container mx-auto mt-5\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n+\r\n       <div className=\"homePage__banner\">\r\n         <h1></h1>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1747639449284,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,14 +54,11 @@\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-      <div className=\"container mx-auto mt-5\">\r\n-        <HomeBannerCarousel />\r\n-      </div>\r\n \r\n       <div className=\"homePage__banner\">\r\n-        <h1></h1>\r\n+        <HomeBannerCarousel />\r\n       </div>\r\n \r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n"
                },
                {
                    "date": 1747640263422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n+import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n+import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n@@ -59,8 +61,14 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n+      {/* Keep Shopping For Section */}\r\n+      <KeepShoppingFor products={products} />\r\n+\r\n+      {/* Continue Shopping Deals Section */}\r\n+      <ContinueShoppingDeals products={products} />\r\n+\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n"
                },
                {
                    "date": 1747640515335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n \r\n import './HomePage.css';\r\n \r\n"
                },
                {
                    "date": 1747640876693,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,8 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n-      {/* Keep Shopping For Section */}\r\n-      <KeepShoppingFor products={products} />\r\n-\r\n       {/* Continue Shopping Deals Section */}\r\n       <ContinueShoppingDeals products={products} />\r\n \r\n       <div className=\"homePage__filters\">\r\n"
                },
                {
                    "date": 1747642610196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,9 +70,9 @@\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n-                    <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"mobile\">Mobile</option>\r\n           <option value=\"clothing\">Clothing</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"books\">Books</option>\r\n           <option value=\"home\">Home</option>\r\n"
                },
                {
                    "date": 1747642784983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n@@ -60,11 +59,8 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n-      {/* Continue Shopping Deals Section */}\r\n-      <ContinueShoppingDeals products={products} />\r\n-\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n"
                },
                {
                    "date": 1747643268654,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n"
                },
                {
                    "date": 1747643641369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,104 +1,113 @@\n-// src/pages/HomePage.js\r\n-import React, { useEffect, useState } from 'react';\r\n-import ProductCard from '../components/ProductCard.js';\r\n-import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-import './HomePage.css';\r\n+import React, { useEffect, useState } from \"react\";\r\n+import HeroBannerCarousel from \"../components/HeroBannerCarousel\";\r\n+import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n+import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n+import ProductCard from \"../components/ProductCard\";\r\n+import \"./HomePage.css\";\r\n \r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n+  const [filteredProducts, setFilteredProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [newProductAdded, setNewProductAdded] = useState(false);\r\n+  const [category, setCategory] = useState(\"all\");\r\n+  const [priceRange, setPriceRange] = useState(\"all\");\r\n \r\n+  // Fetching products from backend\r\n   useEffect(() => {\r\n-  \r\n-    fetch('http://localhost:5000/api/products')\r\n-      .then(response => response.json())\r\n-      .then(data => {\r\n+    fetch(\"http://localhost:5000/api/products\")\r\n+      .then((response) => response.json())\r\n+      .then((data) => {\r\n         setProducts(data.products || data);\r\n+        setFilteredProducts(data.products || data); // Set filtered products initially\r\n         setLoading(false);\r\n       })\r\n-      .catch(error => {\r\n-        console.error('Error fetching products:', error);\r\n+      .catch((error) => {\r\n+        console.error(\"Error fetching products:\", error);\r\n         setLoading(false);\r\n       });\r\n-  }, [newProductAdded]); \r\n+  }, []);\r\n \r\n-  // Add a new product\r\n-  const handleAddProduct = async (newProductData) => {\r\n-    try {\r\n-      const response = await fetch('http://localhost:5000/api/products', {\r\n-        method: 'POST',\r\n-        headers: {\r\n-          'Content-Type': 'application/json',\r\n-        },\r\n-        body: JSON.stringify(newProductData),\r\n-      });\r\n-      const result = await response.json();\r\n-      console.log('Product added:', result);\r\n+  // Filtering Logic\r\n+  useEffect(() => {\r\n+    let filtered = products;\r\n \r\n-      if (response.ok) {\r\n-        \r\n-        setNewProductAdded(!newProductAdded);\r\n-      } else {\r\n-        console.log('Failed to add product:', result);\r\n-      }\r\n-    } catch (error) {\r\n-      console.error('Error adding product:', error);\r\n+    if (category !== \"all\") {\r\n+      filtered = filtered.filter((product) => product.category === category);\r\n     }\r\n-  };\r\n \r\n-  \r\n+    if (priceRange !== \"all\") {\r\n+      filtered = filtered.filter((product) => {\r\n+        if (priceRange === \"under1000\") return product.price < 1000;\r\n+        if (priceRange === \"under5000\") return product.price < 5000;\r\n+        if (priceRange === \"above5000\") return product.price >= 5000;\r\n+        return true;\r\n+      });\r\n+    }\r\n+\r\n+    setFilteredProducts(filtered);\r\n+  }, [category, priceRange, products]);\r\n+\r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-\r\n-      <div className=\"homePage__banner\">\r\n-        <HomeBannerCarousel />\r\n+      <div className=\"container mx-auto mt-5\">\r\n+        <HeroBannerCarousel />\r\n       </div>\r\n \r\n-      <div className=\"homePage__filters\">\r\n-        <h3>Category:</h3>\r\n-        <select>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"fashion\">Fashion</option>\r\n-          <option value=\"books\">Books</option>\r\n-          <option value=\"mobile\">Mobile</option>\r\n-          <option value=\"clothing\">Clothing</option>\r\n-          <option value=\"electronics\">Electronics</option>\r\n-          <option value=\"books\">Books</option>\r\n-          <option value=\"home\">Home</option>\r\n-          <option value=\"toys\">Toys</option>\r\n-          <option value=\"sports\">Sports</option>\r\n-          <option vallue=\"grocery\">Grocery</option>\r\n-          <option value=\"furniture\">Furniture</option>\r\n-          <option value=\"beauty\">Beauty</option>\r\n-          <option value=\"automative\">Automative</option>\r\n-          <option value=\"health\">Health</option>\r\n-          <option value=\"pet\">Pet</option>\r\n-          <option value=\"stationery\">Stationery</option>\r\n-          <option value=\"jewellery\">Jewellery</option>\r\n-          <option value=\"footwear\">Footwear</option>\r\n-          <option value=\"accessories\">Accessories</option>\r\n-          <option value=\"kitchen\">Kitchen</option>\r\n-          <option value=\"garden\">Garden</option>\r\n-          <option value=\"outdoor\">Outdoor</option>\r\n-        </select>\r\n-        \r\n-        <h3>Price:</h3>\r\n-        <select>\r\n-          <option value=\"all\">All</option>\r\n-          <option value=\"under1000\">Under ₹1000</option>\r\n-          <option value=\"under5000\">Under ₹5000</option>\r\n-        </select>\r\n+      {/* Keep Shopping For Section */}\r\n+      <KeepShoppingFor products={filteredProducts} />\r\n+\r\n+      {/* Continue Shopping Deals Section */}\r\n+      <ContinueShoppingDeals products={filteredProducts} />\r\n+\r\n+      {/* Filters */}\r\n+      <div className=\"homePage__filters mt-10\">\r\n+        <div>\r\n+          <h3>Category:</h3>\r\n+          <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n+            <option value=\"all\">All</option>\r\n+            <option value=\"electronics\">Electronics</option>\r\n+            <option value=\"fashion\">Fashion</option>\r\n+            <option value=\"books\">Books</option>\r\n+            <option value=\"mobile\">Mobile</option>\r\n+            <option value=\"clothing\">Clothing</option>\r\n+            <option value=\"home\">Home</option>\r\n+            <option value=\"toys\">Toys</option>\r\n+            <option value=\"sports\">Sports</option>\r\n+            <option value=\"grocery\">Grocery</option>\r\n+            <option value=\"furniture\">Furniture</option>\r\n+            <option value=\"beauty\">Beauty</option>\r\n+            <option value=\"automative\">Automative</option>\r\n+            <option value=\"health\">Health</option>\r\n+            <option value=\"pet\">Pet</option>\r\n+            <option value=\"stationery\">Stationery</option>\r\n+            <option value=\"jewellery\">Jewellery</option>\r\n+            <option value=\"footwear\">Footwear</option>\r\n+            <option value=\"accessories\">Accessories</option>\r\n+            <option value=\"kitchen\">Kitchen</option>\r\n+            <option value=\"garden\">Garden</option>\r\n+            <option value=\"outdoor\">Outdoor</option>\r\n+          </select>\r\n+        </div>\r\n+\r\n+        <div>\r\n+          <h3>Price:</h3>\r\n+          <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n+            <option value=\"all\">All</option>\r\n+            <option value=\"under1000\">Under ₹1000</option>\r\n+            <option value=\"under5000\">Under ₹5000</option>\r\n+            <option value=\"above5000\">Above ₹5000</option>\r\n+          </select>\r\n+        </div>\r\n       </div>\r\n \r\n+      {/* Product List */}\r\n       <div className=\"homePage__productList\">\r\n-        {products.map((product) => (\r\n+        {filteredProducts.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747643656636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,6 @@\n import React, { useEffect, useState } from \"react\";\r\n import HeroBannerCarousel from \"../components/HeroBannerCarousel\";\r\n-import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n-import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n import ProductCard from \"../components/ProductCard\";\r\n import \"./HomePage.css\";\r\n \r\n const HomePage = () => {\r\n"
                },
                {
                    "date": 1747643667981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,14 +54,8 @@\n       <div className=\"container mx-auto mt-5\">\r\n         <HeroBannerCarousel />\r\n       </div>\r\n \r\n-      {/* Keep Shopping For Section */}\r\n-      <KeepShoppingFor products={filteredProducts} />\r\n-\r\n-      {/* Continue Shopping Deals Section */}\r\n-      <ContinueShoppingDeals products={filteredProducts} />\r\n-\r\n       {/* Filters */}\r\n       <div className=\"homePage__filters mt-10\">\r\n         <div>\r\n           <h3>Category:</h3>\r\n"
                },
                {
                    "date": 1747646283875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from \"react\";\r\n-import HeroBannerCarousel from \"../components/HeroBannerCarousel\";\r\n+import HomeBannerCarousel from \"../components/HomeBannerCarousel\";\r\n import ProductCard from \"../components/ProductCard\";\r\n import \"./HomePage.css\";\r\n \r\n const HomePage = () => {\r\n@@ -51,9 +51,9 @@\n \r\n   return (\r\n     <div className=\"homePage\">\r\n       <div className=\"container mx-auto mt-5\">\r\n-        <HeroBannerCarousel />\r\n+        <HomeBannerCarousel />\r\n       </div>\r\n \r\n       {/* Filters */}\r\n       <div className=\"homePage__filters mt-10\">\r\n"
                },
                {
                    "date": 1747646759947,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,8 @@\n           </select>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Product List */}\r\n       <div className=\"homePage__productList\">\r\n         {filteredProducts.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n"
                },
                {
                    "date": 1747646781984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     fetch(\"http://localhost:5000/api/products\")\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n         setProducts(data.products || data);\r\n-        setFilteredProducts(data.products || data); // Set filtered products initially\r\n+        setFilteredProducts(data.products || data);\r\n         setLoading(false);\r\n       })\r\n       .catch((error) => {\r\n         console.error(\"Error fetching products:\", error);\r\n"
                },
                {
                    "date": 1747647273336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,29 @@\n-import React, { useEffect, useState } from \"react\";\r\n-import HomeBannerCarousel from \"../components/HomeBannerCarousel\";\r\n-import ProductCard from \"../components/ProductCard\";\r\n-import \"./HomePage.css\";\r\n+// src/pages/HomePage.js\r\n+import React, { useEffect, useState } from 'react';\r\n+import ProductCard from '../components/ProductCard.js';\r\n+import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n \r\n+import './HomePage.css';\r\n+\r\n const HomePage = () => {\r\n   const [products, setProducts] = useState([]);\r\n-  const [filteredProducts, setFilteredProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [category, setCategory] = useState(\"all\");\r\n-  const [priceRange, setPriceRange] = useState(\"all\");\r\n \r\n-  // Fetching products from backend\r\n   useEffect(() => {\r\n-    fetch(\"http://localhost:5000/api/products\")\r\n-      .then((response) => response.json())\r\n-      .then((data) => {\r\n+  \r\n+    fetch('http://localhost:5000/api/products')\r\n+      .then(response => response.json())\r\n+      .then(data => {\r\n         setProducts(data.products || data);\r\n-        setFilteredProducts(data.products || data);\r\n         setLoading(false);\r\n       })\r\n-      .catch((error) => {\r\n-        console.error(\"Error fetching products:\", error);\r\n+      .catch(error => {\r\n+        console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n   }, []);\r\n-\r\n+  \r\n   // Filtering Logic\r\n   useEffect(() => {\r\n     let filtered = products;\r\n \r\n@@ -43,62 +41,59 @@\n     }\r\n \r\n     setFilteredProducts(filtered);\r\n   }, [category, priceRange, products]);\r\n-\r\n+  \r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n \r\n   return (\r\n     <div className=\"homePage\">\r\n-      <div className=\"container mx-auto mt-5\">\r\n+\r\n+      <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n-      {/* Filters */}\r\n-      <div className=\"homePage__filters mt-10\">\r\n-        <div>\r\n-          <h3>Category:</h3>\r\n-          <select value={category} onChange={(e) => setCategory(e.target.value)}>\r\n-            <option value=\"all\">All</option>\r\n-            <option value=\"electronics\">Electronics</option>\r\n-            <option value=\"fashion\">Fashion</option>\r\n-            <option value=\"books\">Books</option>\r\n-            <option value=\"mobile\">Mobile</option>\r\n-            <option value=\"clothing\">Clothing</option>\r\n-            <option value=\"home\">Home</option>\r\n-            <option value=\"toys\">Toys</option>\r\n-            <option value=\"sports\">Sports</option>\r\n-            <option value=\"grocery\">Grocery</option>\r\n-            <option value=\"furniture\">Furniture</option>\r\n-            <option value=\"beauty\">Beauty</option>\r\n-            <option value=\"automative\">Automative</option>\r\n-            <option value=\"health\">Health</option>\r\n-            <option value=\"pet\">Pet</option>\r\n-            <option value=\"stationery\">Stationery</option>\r\n-            <option value=\"jewellery\">Jewellery</option>\r\n-            <option value=\"footwear\">Footwear</option>\r\n-            <option value=\"accessories\">Accessories</option>\r\n-            <option value=\"kitchen\">Kitchen</option>\r\n-            <option value=\"garden\">Garden</option>\r\n-            <option value=\"outdoor\">Outdoor</option>\r\n-          </select>\r\n-        </div>\r\n-\r\n-        <div>\r\n-          <h3>Price:</h3>\r\n-          <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}>\r\n-            <option value=\"all\">All</option>\r\n-            <option value=\"under1000\">Under ₹1000</option>\r\n-            <option value=\"under5000\">Under ₹5000</option>\r\n-            <option value=\"above5000\">Above ₹5000</option>\r\n-          </select>\r\n-        </div>\r\n+      <div className=\"homePage__filters\">\r\n+        <h3>Category:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"fashion\">Fashion</option>\r\n+          <option value=\"books\">Books</option>\r\n+          <option value=\"mobile\">Mobile</option>\r\n+          <option value=\"clothing\">Clothing</option>\r\n+          <option value=\"electronics\">Electronics</option>\r\n+          <option value=\"books\">Books</option>\r\n+          <option value=\"home\">Home</option>\r\n+          <option value=\"toys\">Toys</option>\r\n+          <option value=\"sports\">Sports</option>\r\n+          <option vallue=\"grocery\">Grocery</option>\r\n+          <option value=\"furniture\">Furniture</option>\r\n+          <option value=\"beauty\">Beauty</option>\r\n+          <option value=\"automative\">Automative</option>\r\n+          <option value=\"health\">Health</option>\r\n+          <option value=\"pet\">Pet</option>\r\n+          <option value=\"stationery\">Stationery</option>\r\n+          <option value=\"jewellery\">Jewellery</option>\r\n+          <option value=\"footwear\">Footwear</option>\r\n+          <option value=\"accessories\">Accessories</option>\r\n+          <option value=\"kitchen\">Kitchen</option>\r\n+          <option value=\"garden\">Garden</option>\r\n+          <option value=\"outdoor\">Outdoor</option>\r\n+        </select>\r\n+        \r\n+        <h3>Price:</h3>\r\n+        <select>\r\n+          <option value=\"all\">All</option>\r\n+          <option value=\"under1000\">Under ₹1000</option>\r\n+          <option value=\"under5000\">Under ₹5000</option>\r\n+        </select>\r\n       </div>\r\n \r\n       <div className=\"homePage__productList\">\r\n-        {filteredProducts.map((product) => (\r\n+        {products.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747647332443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,16 @@\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n+\r\n   const [products, setProducts] = useState([]);\r\n+  const [filteredProducts, setFilteredProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n+  const [category, setCategory] = useState(\"all\");\r\n+  const [priceRange, setPriceRange] = useState(\"all\");\r\n \r\n+\r\n   useEffect(() => {\r\n   \r\n     fetch('http://localhost:5000/api/products')\r\n       .then(response => response.json())\r\n"
                },
                {
                    "date": 1747647381122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,8 +58,14 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n+      {/* Keep Shopping For Section */}\r\n+      <KeepShoppingFor products={filteredProducts} />\r\n+\r\n+      {/* Continue Shopping Deals Section */}\r\n+      <ContinueShoppingDeals products={filteredProducts} />\r\n+\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n"
                },
                {
                    "date": 1747648113950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n+import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n+import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n@@ -58,12 +60,12 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n-      {/* Keep Shopping For Section */}\r\n+      <KeepShoppingFor products={products} />\r\n+      <ContinueShoppingDeals products={products} />\r\n+\r\n       <KeepShoppingFor products={filteredProducts} />\r\n-\r\n-      {/* Continue Shopping Deals Section */}\r\n       <ContinueShoppingDeals products={filteredProducts} />\r\n \r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n"
                },
                {
                    "date": 1747648259674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n       <ContinueShoppingDeals products={filteredProducts} />\r\n \r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n+        <select value={category} onChange={(e) => setCategory(e.target.value)}></select>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n@@ -96,8 +97,9 @@\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n         \r\n         <h3>Price:</h3>\r\n+        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}></select>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n"
                },
                {
                    "date": 1747648731014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-import KeepShoppingFor from \"../components/KeepShoppingFor\";\r\n-import ContinueShoppingDeals from \"../components/ContinueShoppingDeals\";\r\n-\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n \r\n@@ -60,14 +57,8 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n-      <KeepShoppingFor products={products} />\r\n-      <ContinueShoppingDeals products={products} />\r\n-\r\n-      <KeepShoppingFor products={filteredProducts} />\r\n-      <ContinueShoppingDeals products={filteredProducts} />\r\n-\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select value={category} onChange={(e) => setCategory(e.target.value)}></select>\r\n         <select>\r\n"
                },
                {
                    "date": 1747648861101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,16 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n+\r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n-\r\n   const [products, setProducts] = useState([]);\r\n-  const [filteredProducts, setFilteredProducts] = useState([]);\r\n   const [loading, setLoading] = useState(true);\r\n-  const [category, setCategory] = useState(\"all\");\r\n-  const [priceRange, setPriceRange] = useState(\"all\");\r\n+  const [newProductAdded, setNewProductAdded] = useState(false);\r\n \r\n-\r\n   useEffect(() => {\r\n   \r\n     fetch('http://localhost:5000/api/products')\r\n       .then(response => response.json())\r\n@@ -24,29 +21,34 @@\n       .catch(error => {\r\n         console.error('Error fetching products:', error);\r\n         setLoading(false);\r\n       });\r\n-  }, []);\r\n-  \r\n-  // Filtering Logic\r\n-  useEffect(() => {\r\n-    let filtered = products;\r\n+  }, [newProductAdded]); \r\n \r\n-    if (category !== \"all\") {\r\n-      filtered = filtered.filter((product) => product.category === category);\r\n-    }\r\n+  // Add a new product\r\n+  const handleAddProduct = async (newProductData) => {\r\n+    try {\r\n+      const response = await fetch('http://localhost:5000/api/products', {\r\n+        method: 'POST',\r\n+        headers: {\r\n+          'Content-Type': 'application/json',\r\n+        },\r\n+        body: JSON.stringify(newProductData),\r\n+      });\r\n+      const result = await response.json();\r\n+      console.log('Product added:', result);\r\n \r\n-    if (priceRange !== \"all\") {\r\n-      filtered = filtered.filter((product) => {\r\n-        if (priceRange === \"under1000\") return product.price < 1000;\r\n-        if (priceRange === \"under5000\") return product.price < 5000;\r\n-        if (priceRange === \"above5000\") return product.price >= 5000;\r\n-        return true;\r\n-      });\r\n+      if (response.ok) {\r\n+        \r\n+        setNewProductAdded(!newProductAdded);\r\n+      } else {\r\n+        console.log('Failed to add product:', result);\r\n+      }\r\n+    } catch (error) {\r\n+      console.error('Error adding product:', error);\r\n     }\r\n+  };\r\n \r\n-    setFilteredProducts(filtered);\r\n-  }, [category, priceRange, products]);\r\n   \r\n   if (loading) {\r\n     return <div>Loading...</div>;\r\n   }\r\n@@ -59,15 +61,14 @@\n       </div>\r\n \r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n-        <select value={category} onChange={(e) => setCategory(e.target.value)}></select>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"fashion\">Fashion</option>\r\n           <option value=\"books\">Books</option>\r\n-          <option value=\"mobile\">Mobile</option>\r\n+                    <option value=\"mobile\">Mobile</option>\r\n           <option value=\"clothing\">Clothing</option>\r\n           <option value=\"electronics\">Electronics</option>\r\n           <option value=\"books\">Books</option>\r\n           <option value=\"home\">Home</option>\r\n@@ -88,9 +89,8 @@\n           <option value=\"outdoor\">Outdoor</option>\r\n         </select>\r\n         \r\n         <h3>Price:</h3>\r\n-        <select value={priceRange} onChange={(e) => setPriceRange(e.target.value)}></select>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n           <option value=\"under1000\">Under ₹1000</option>\r\n           <option value=\"under5000\">Under ₹5000</option>\r\n"
                },
                {
                    "date": 1747649312066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n+import KeepShoppingFor from '../components/KeepShoppingFor.js';\r\n+import ContinueShoppingDeals from '../components/ContinueShoppingDeals.js';\r\n \r\n import './HomePage.css';\r\n \r\n const HomePage = () => {\r\n@@ -59,8 +61,15 @@\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n \r\n+      <div className=\"homePage__keepShoppingFor\">\r\n+        <KeepShoppingFor products={products} />\r\n+      </div>\r\n+      <div className=\"homePage__continueShoppingDeals\">\r\n+        <ContinueShoppingDeals products={products} />\r\n+      </div>\r\n+\r\n       <div className=\"homePage__filters\">\r\n         <h3>Category:</h3>\r\n         <select>\r\n           <option value=\"all\">All</option>\r\n"
                },
                {
                    "date": 1747649489519,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n // src/pages/HomePage.js\r\n import React, { useEffect, useState } from 'react';\r\n import ProductCard from '../components/ProductCard.js';\r\n import HomeBannerCarousel from '../components/HomeBannerCarousel.js';\r\n-import KeepShoppingFor from '../components/KeepShoppingFor.js';\r\n import ContinueShoppingDeals from '../components/ContinueShoppingDeals.js';\r\n \r\n import './HomePage.css';\r\n \r\n@@ -60,12 +59,8 @@\n \r\n       <div className=\"homePage__banner\">\r\n         <HomeBannerCarousel />\r\n       </div>\r\n-\r\n-      <div className=\"homePage__keepShoppingFor\">\r\n-        <KeepShoppingFor products={products} />\r\n-      </div>\r\n       <div className=\"homePage__continueShoppingDeals\">\r\n         <ContinueShoppingDeals products={products} />\r\n       </div>\r\n \r\n"
                }
            ],
            "date": 1747223516952,
            "name": "Commit-0",
            "content": "// src/pages/HomePage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProductCard from '../components/ProductCard.js';\r\n\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [newProductAdded, setNewProductAdded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Fetch products when the component mounts or newProductAdded state changes\r\n    fetch('http://localhost:5000/api/products') // Replace with your actual API endpoint\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setProducts(data.products || data); // Set fetched products\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching products:', error);\r\n        setLoading(false);\r\n      });\r\n  }, [newProductAdded]); // Re-fetch products when newProductAdded changes\r\n\r\n  // Add a new product\r\n  const handleAddProduct = async (newProductData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/products', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newProductData),\r\n      });\r\n      const result = await response.json();\r\n      console.log('Product added:', result);\r\n\r\n      if (response.ok) {\r\n        // If product added successfully, trigger a re-fetch\r\n        setNewProductAdded(!newProductAdded);\r\n      } else {\r\n        console.log('Failed to add product:', result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding product:', error);\r\n    }\r\n  };\r\n\r\n  // Show loading spinner or message until data is fetched\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"homePage\">\r\n      <div className=\"homePage__banner\">\r\n        <h1> . </h1>\r\n      </div>\r\n\r\n      <div className=\"homePage__filters\">\r\n        <h3>Category:</h3>\r\n        <select>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"electronics\">Electronics</option>\r\n          <option value=\"fashion\">Fashion</option>\r\n          <option value=\"books\">Books</option>\r\n                    <option value=\"mobile\">Mobile</option>\r\n          <option value=\"clothing\">Clothing</option>\r\n          <option value=\"electronics\">Electronics</option>\r\n          <option value=\"books\">Books</option>\r\n          <option value=\"home\">Home</option>\r\n          <option value=\"toys\">Toys</option>\r\n          <option value=\"sports\">Sports</option>\r\n          <option vallue=\"grocery\">Grocery</option>\r\n          <option value=\"furniture\">Furniture</option>\r\n          <option value=\"beauty\">Beauty</option>\r\n          <option value=\"automative\">Automative</option>\r\n          <option value=\"health\">Health</option>\r\n          <option value=\"pet\">Pet</option>\r\n          <option value=\"stationery\">Stationery</option>\r\n          <option value=\"jewellery\">Jewellery</option>\r\n          <option value=\"footwear\">Footwear</option>\r\n          <option value=\"accessories\">Accessories</option>\r\n          <option value=\"kitchen\">Kitchen</option>\r\n          <option value=\"garden\">Garden</option>\r\n          <option value=\"outdoor\">Outdoor</option>\r\n        </select>\r\n        \r\n        <h3>Price:</h3>\r\n        <select>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"under1000\">Under ₹1000</option>\r\n          <option value=\"under5000\">Under ₹5000</option>\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"homePage__productList\">\r\n        {products.map((product) => (\r\n          <ProductCard key={product._id} product={product} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"
        }
    ]
}