{
    "sourceFile": "frontend/src/pages/ProductListingPage.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1747294235615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1747296943696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,29 @@\n import React, { useEffect, useState } from 'react';\r\n-import ProductCard from '../components/ProductCard';\r\n-import { getAllProducts } from '../services/productService';\r\n+import { fetchAllProducts } from '../../services/productService';\r\n+import ProductCard from './ProductCard';\r\n+import './ProductListing.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n \r\n+  // Fetch products from the backend\r\n   useEffect(() => {\r\n-    const fetchProducts = async () => {\r\n-      const response = await getAllProducts();\r\n-      if (response.success) {\r\n-        setProducts(response.data);\r\n-      }\r\n+    const getProducts = async () => {\r\n+      const data = await fetchAllProducts();\r\n+      setProducts(data);\r\n     };\r\n-    fetchProducts();\r\n+    getProducts();\r\n   }, []);\r\n \r\n   return (\r\n-    <div className=\"grid grid-cols-3 gap-4 p-4\">\r\n-      {products.map((product) => (\r\n-        <ProductCard key={product._id} product={product} />\r\n-      ))}\r\n+    <div className=\"product-listing-page\">\r\n+      <h2>Product Listings</h2>\r\n+      <div className=\"product-grid\">\r\n+        {products.map((product) => (\r\n+          <ProductCard key={product._id} product={product} />\r\n+        ))}\r\n+      </div>\r\n     </div>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1747297394970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,27 @@\n import React, { useEffect, useState } from 'react';\r\n import { fetchAllProducts } from '../../services/productService';\r\n import ProductCard from './ProductCard';\r\n-import './ProductListing.css';\r\n+import './ProductListingPage.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n \r\n-  // Fetch products from the backend\r\n   useEffect(() => {\r\n     const getProducts = async () => {\r\n-      const data = await fetchAllProducts();\r\n-      setProducts(data);\r\n+      try {\r\n+        const data = await fetchAllProducts();\r\n+        setProducts(data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching products:\", error);\r\n+      }\r\n     };\r\n     getProducts();\r\n   }, []);\r\n \r\n   return (\r\n     <div className=\"product-listing-page\">\r\n-      <h2>Product Listings</h2>\r\n+      <h2>All Products</h2>\r\n       <div className=\"product-grid\">\r\n         {products.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n"
                },
                {
                    "date": 1747297402326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import { fetchAllProducts } from '../../services/productService';\r\n import ProductCard from './ProductCard';\r\n-import './ProductListingPage.css';\r\n+import './ProductListing.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1747300182537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n-import { fetchAllProducts } from '../../services/productService';\r\n-import ProductCard from './ProductCard';\r\n-import './ProductListing.css';\r\n+import { fetchAllProducts } from '../services/productService';\r\n+import ProductCard from '../components/ProductCard';\r\n+import './ProductListingPage.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1747300345790,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import { fetchAllProducts } from '../services/productService';\r\n import ProductCard from '../components/ProductCard';\r\n-import './ProductListingPage.css';\r\n+import './ProductListing.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n \r\n"
                },
                {
                    "date": 1747300830663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,21 @@\n import React, { useEffect, useState } from 'react';\r\n import { fetchAllProducts } from '../services/productService';\r\n import ProductCard from '../components/ProductCard';\r\n-import './ProductListing.css';\r\n+import SearchFilter from '../components/SearchFilter';\r\n+import CategoryFilter from '../components/CategoryFilter';\r\n+import PriceRangeFilter from '../components/PriceRangeFilter';\r\n+import './ProductListingPage.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n+  const [searchTerm, setSearchTerm] = useState('');\r\n+  const [category, setCategory] = useState('');\r\n+  const [minPrice, setMinPrice] = useState('');\r\n+  const [maxPrice, setMaxPrice] = useState('');\r\n \r\n+  const categories = [\"Electronics\", \"Books\", \"Clothing\", \"Home Appliances\"];\r\n+\r\n   useEffect(() => {\r\n     const getProducts = async () => {\r\n       try {\r\n         const data = await fetchAllProducts();\r\n@@ -17,13 +26,25 @@\n     };\r\n     getProducts();\r\n   }, []);\r\n \r\n+  const filteredProducts = products.filter((product) => {\r\n+    return (\r\n+      product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n+      (category ? product.category === category : true) &&\r\n+      (minPrice ? product.price >= minPrice : true) &&\r\n+      (maxPrice ? product.price <= maxPrice : true)\r\n+    );\r\n+  });\r\n+\r\n   return (\r\n     <div className=\"product-listing-page\">\r\n       <h2>All Products</h2>\r\n+      <SearchFilter searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n+      <CategoryFilter category={category} setCategory={setCategory} categories={categories} />\r\n+      <PriceRangeFilter minPrice={minPrice} maxPrice={maxPrice} setMinPrice={setMinPrice} setMaxPrice={setMaxPrice} />\r\n       <div className=\"product-grid\">\r\n-        {products.map((product) => (\r\n+        {filteredProducts.map((product) => (\r\n           <ProductCard key={product._id} product={product} />\r\n         ))}\r\n       </div>\r\n     </div>\r\n"
                },
                {
                    "date": 1747300838672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import ProductCard from '../components/ProductCard';\r\n import SearchFilter from '../components/SearchFilter';\r\n import CategoryFilter from '../components/CategoryFilter';\r\n import PriceRangeFilter from '../components/PriceRangeFilter';\r\n-import './ProductListingPage.css';\r\n+import './ProductListing.css';\r\n \r\n const ProductListingPage = () => {\r\n   const [products, setProducts] = useState([]);\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n"
                },
                {
                    "date": 1747302520939,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,10 @@\n   useEffect(() => {\r\n     const getProducts = async () => {\r\n       try {\r\n         const data = await fetchAllProducts();\r\n-        setProducts(data);\r\n+        // Defensive: if API returns { products: [...] }\r\n+        setProducts(data.products || data);\r\n       } catch (error) {\r\n         console.error(\"Error fetching products:\", error);\r\n       }\r\n     };\r\n@@ -28,25 +29,35 @@\n   }, []);\r\n \r\n   const filteredProducts = products.filter((product) => {\r\n     return (\r\n+      product.name &&\r\n       product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n       (category ? product.category === category : true) &&\r\n-      (minPrice ? product.price >= minPrice : true) &&\r\n-      (maxPrice ? product.price <= maxPrice : true)\r\n+      (minPrice ? product.price >= Number(minPrice) : true) &&\r\n+      (maxPrice ? product.price <= Number(maxPrice) : true)\r\n     );\r\n   });\r\n \r\n   return (\r\n     <div className=\"product-listing-page\">\r\n       <h2>All Products</h2>\r\n       <SearchFilter searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n       <CategoryFilter category={category} setCategory={setCategory} categories={categories} />\r\n-      <PriceRangeFilter minPrice={minPrice} maxPrice={maxPrice} setMinPrice={setMinPrice} setMaxPrice={setMaxPrice} />\r\n+      <PriceRangeFilter\r\n+        minPrice={minPrice}\r\n+        maxPrice={maxPrice}\r\n+        setMinPrice={setMinPrice}\r\n+        setMaxPrice={setMaxPrice}\r\n+      />\r\n       <div className=\"product-grid\">\r\n-        {filteredProducts.map((product) => (\r\n-          <ProductCard key={product._id} product={product} />\r\n-        ))}\r\n+        {filteredProducts.length > 0 ? (\r\n+          filteredProducts.map((product) => (\r\n+            <ProductCard key={product._id || product.id} product={product} />\r\n+          ))\r\n+        ) : (\r\n+          <p>No products found.</p>\r\n+        )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1747303070228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,12 @@\n-import React, { useEffect, useState } from 'react';\r\n-import { fetchAllProducts } from '../services/productService';\r\n-import ProductCard from '../components/ProductCard';\r\n-import SearchFilter from '../components/SearchFilter';\r\n-import CategoryFilter from '../components/CategoryFilter';\r\n-import PriceRangeFilter from '../components/PriceRangeFilter';\r\n-import './ProductListing.css';\r\n-\r\n-const ProductListingPage = () => {\r\n-  const [products, setProducts] = useState([]);\r\n+const ProductListingPage = ({ products }) => {\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n   const [category, setCategory] = useState('');\r\n   const [minPrice, setMinPrice] = useState('');\r\n   const [maxPrice, setMaxPrice] = useState('');\r\n \r\n   const categories = [\"Electronics\", \"Books\", \"Clothing\", \"Home Appliances\"];\r\n \r\n-  useEffect(() => {\r\n-    const getProducts = async () => {\r\n-      try {\r\n-        const data = await fetchAllProducts();\r\n-        // Defensive: if API returns { products: [...] }\r\n-        setProducts(data.products || data);\r\n-      } catch (error) {\r\n-        console.error(\"Error fetching products:\", error);\r\n-      }\r\n-    };\r\n-    getProducts();\r\n-  }, []);\r\n-\r\n   const filteredProducts = products.filter((product) => {\r\n     return (\r\n       product.name &&\r\n       product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n@@ -59,7 +37,5 @@\n         )}\r\n       </div>\r\n     </div>\r\n   );\r\n-};\r\n-\r\n-export default ProductListingPage;\n\\ No newline at end of file\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747303160218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,33 +1,59 @@\n-const ProductListingPage = ({ products }) => {\r\n+import React, { useEffect, useState } from 'react';\r\n+\r\n+import ProductCard from '../components/ProductCard';\r\n+import SearchFilter from '../components/SearchFilter';\r\n+import CategoryFilter from '../components/CategoryFilter';\r\n+import PriceRangeFilter from '../components/PriceRangeFilter';\r\n+\r\n+import { fetchAllProducts } from '../services/productService';\r\n+import './ProductListing.css';\r\n+\r\n+const ProductListingPage = () => {\r\n+  const [products, setProducts] = useState([]);\r\n   const [searchTerm, setSearchTerm] = useState('');\r\n   const [category, setCategory] = useState('');\r\n   const [minPrice, setMinPrice] = useState('');\r\n   const [maxPrice, setMaxPrice] = useState('');\r\n \r\n   const categories = [\"Electronics\", \"Books\", \"Clothing\", \"Home Appliances\"];\r\n \r\n+  useEffect(() => {\r\n+    const getProducts = async () => {\r\n+      try {\r\n+        const data = await fetchAllProducts();\r\n+        // Defensive: if API returns { products: [...] }\r\n+        setProducts(Array.isArray(data.products) ? data.products : data);\r\n+      } catch (error) {\r\n+        console.error(\"Error fetching products:\", error);\r\n+      }\r\n+    };\r\n+    getProducts();\r\n+  }, []);\r\n+\r\n+  // Filter products based on search, category, and price range\r\n   const filteredProducts = products.filter((product) => {\r\n-    return (\r\n-      product.name &&\r\n-      product.name.toLowerCase().includes(searchTerm.toLowerCase()) &&\r\n-      (category ? product.category === category : true) &&\r\n-      (minPrice ? product.price >= Number(minPrice) : true) &&\r\n-      (maxPrice ? product.price <= Number(maxPrice) : true)\r\n-    );\r\n+    const matchesName = product.name?.toLowerCase().includes(searchTerm.toLowerCase());\r\n+    const matchesCategory = category ? product.category === category : true;\r\n+    const matchesMinPrice = minPrice ? product.price >= Number(minPrice) : true;\r\n+    const matchesMaxPrice = maxPrice ? product.price <= Number(maxPrice) : true;\r\n+\r\n+    return matchesName && matchesCategory && matchesMinPrice && matchesMaxPrice;\r\n   });\r\n \r\n   return (\r\n     <div className=\"product-listing-page\">\r\n       <h2>All Products</h2>\r\n+      \r\n       <SearchFilter searchTerm={searchTerm} setSearchTerm={setSearchTerm} />\r\n       <CategoryFilter category={category} setCategory={setCategory} categories={categories} />\r\n       <PriceRangeFilter\r\n         minPrice={minPrice}\r\n         maxPrice={maxPrice}\r\n         setMinPrice={setMinPrice}\r\n         setMaxPrice={setMaxPrice}\r\n       />\r\n+\r\n       <div className=\"product-grid\">\r\n         {filteredProducts.length > 0 ? (\r\n           filteredProducts.map((product) => (\r\n             <ProductCard key={product._id || product.id} product={product} />\r\n@@ -37,5 +63,7 @@\n         )}\r\n       </div>\r\n     </div>\r\n   );\r\n-};\n\\ No newline at end of file\n+};\r\n+\r\n+export default ProductListingPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1747303452585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,13 +55,13 @@\n \r\n       <div className=\"product-grid\">\r\n         {filteredProducts.length > 0 ? (\r\n           filteredProducts.map((product) => (\r\n-            <ProductCard key={product._id || product.id} product={product} />\r\n-          ))\r\n-        ) : (\r\n-          <p>No products found.</p>\r\n-        )}\r\n+          <ProductCard key={product._id || product.id} product={product} />\r\n+        ))\r\n+      ) : (\r\n+      <p>No products found.</p>\r\n+      )}\r\n       </div>\r\n     </div>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1747303484878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,8 +39,10 @@\n \r\n     return matchesName && matchesCategory && matchesMinPrice && matchesMaxPrice;\r\n   });\r\n \r\n+  console.log('filteredProducts:', filteredProducts);\r\n+\r\n   return (\r\n     <div className=\"product-listing-page\">\r\n       <h2>All Products</h2>\r\n       \r\n"
                },
                {
                    "date": 1747377809264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,18 +20,16 @@\n   useEffect(() => {\r\n     const getProducts = async () => {\r\n       try {\r\n         const data = await fetchAllProducts();\r\n-        // Defensive: if API returns { products: [...] }\r\n         setProducts(Array.isArray(data.products) ? data.products : data);\r\n       } catch (error) {\r\n         console.error(\"Error fetching products:\", error);\r\n       }\r\n     };\r\n     getProducts();\r\n   }, []);\r\n \r\n-  // Filter products based on search, category, and price range\r\n   const filteredProducts = products.filter((product) => {\r\n     const matchesName = product.name?.toLowerCase().includes(searchTerm.toLowerCase());\r\n     const matchesCategory = category ? product.category === category : true;\r\n     const matchesMinPrice = minPrice ? product.price >= Number(minPrice) : true;\r\n"
                }
            ],
            "date": 1747294235615,
            "name": "Commit-0",
            "content": "import React, { useEffect, useState } from 'react';\r\nimport ProductCard from '../components/ProductCard';\r\nimport { getAllProducts } from '../services/productService';\r\n\r\nconst ProductListingPage = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const response = await getAllProducts();\r\n      if (response.success) {\r\n        setProducts(response.data);\r\n      }\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 p-4\">\r\n      {products.map((product) => (\r\n        <ProductCard key={product._id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListingPage;"
        }
    ]
}