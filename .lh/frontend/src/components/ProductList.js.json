{
    "sourceFile": "frontend/src/components/ProductList.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1747285292990,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1747285292990,
            "name": "Commit-0",
            "content": "// src/components/ProductList.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProductList = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [productsPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const { data } = await axios.get(`/api/admin/products`);\r\n        setProducts(data);\r\n      } catch (error) {\r\n        toast.error(\"Failed to fetch products. Try again later.\");\r\n      }\r\n      setLoading(false);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Search Filter\r\n  const filteredProducts = products.filter(product =>\r\n    product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Pagination Logic\r\n  const indexOfLastProduct = currentPage * productsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - productsPerPage;\r\n  const currentProducts = filteredProducts.slice(indexOfFirstProduct, indexOfLastProduct);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Delete Product\r\n  const deleteProduct = async (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete this product?\")) {\r\n      try {\r\n        await axios.delete(`/api/admin/products/${id}`);\r\n        const { data } = await axios.get(`/api/admin/products`);\r\n        setProducts(data);\r\n        toast.success(\"Product deleted successfully.\");\r\n      } catch (error) {\r\n        toast.error(\"Failed to delete product.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-list\">\r\n      <h2>Product List</h2>\r\n\r\n      {/* üîπ Toast Container */}\r\n      <ToastContainer position=\"top-right\" autoClose={3000} hideProgressBar={false} />\r\n\r\n      <div className=\"product-list-header\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search Products...\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"add-button\"\r\n          onClick={() => window.location.href = \"/admin/products/add\"}\r\n        >\r\n          ‚ûï Add Product\r\n        </button>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Brand</th>\r\n              <th>Category</th>\r\n              <th>Price</th>\r\n              <th>Stock</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentProducts.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product.name}</td>\r\n                <td>{product.brand}</td>\r\n                <td>{product.category}</td>\r\n                <td>${product.price}</td>\r\n                <td>{product.countInStock}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"edit-button\"\r\n                    onClick={() => window.location.href = `/admin/products/edit/${product._id}`}\r\n                  >\r\n                    ‚úèÔ∏è Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"delete-button\"\r\n                    onClick={() => deleteProduct(product._id)}\r\n                  >\r\n                    ‚ùå Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n\r\n      {/* Pagination */}\r\n      <div className=\"pagination\">\r\n        {Array.from({ length: Math.ceil(filteredProducts.length / productsPerPage) }, (_, index) => (\r\n          <button key={index} onClick={() => paginate(index + 1)}>\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;"
        }
    ]
}